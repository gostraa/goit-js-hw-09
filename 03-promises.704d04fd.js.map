{"mappings":"gfACA,IAAAA,EAAAC,EAAA,SAEMC,EAAWC,SAASC,cAAc,SAmBxC,SAASC,EAAcC,EAAOC,GAC5B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFR,EAAAe,OAAOC,QAAQ,uBAAqCC,OAAZX,EAAM,QAAYW,OAANV,EAAM,OAG1DP,EAAAe,OAAOG,QAAQ,sBAAkCD,OAAZX,EAAM,QAAYW,OAANV,EAAM,M,GAGxDA,E,IA7BPL,EAASiB,iBAAiB,UAG1B,SAAsBC,GACpBA,EAAEC,iBAKF,IAJA,IAAMd,EAAQe,OAAOpB,EAASqB,SAAShB,MAAMiB,OACvCC,EAAOH,OAAOpB,EAASqB,SAASE,KAAKD,OACrCE,EAASJ,OAAOpB,EAASqB,SAASG,OAAOF,OAEtClB,EAAQ,EAAGA,GAASoB,EAAQpB,GAAS,EAC5CD,EAAcC,EAAOC,GAAOoB,OAAOC,QACnCrB,GAASkB,C","sources":["src/js/03-promises.js"],"sourcesContent":["\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formElem = document.querySelector(\".form\");\n  \nformElem.addEventListener(\"submit\", onFormSubmit);\n\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n  const delay = Number(formElem.elements.delay.value);\n  const step = Number(formElem.elements.step.value);\n  const amount = Number(formElem.elements.amount.value);\n  \n  for (let index = 1; index <= amount; index += 1) {\n    createPromise(index, delay).then().catch();\n    delay += step;\n   \n  }\n  \n}\n\nfunction createPromise(index, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        Notify.success(`✅ Fulfilled promise ${index} in ${delay}ms`)\n        resolve;\n      } else {\n        Notify.failure(`❌ Rejected promise ${index} in ${delay}ms`)\n        reject;\n      }\n    }, delay);\n \n  })\n}\n\n\n\n\n\n\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$formElem","document","querySelector","$ce04d3a99e08e73b$var$createPromise","index","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","Notify","success","concat","failure","addEventListener","e","preventDefault","Number","elements","value","step","amount","then","catch"],"version":3,"file":"03-promises.704d04fd.js.map"}