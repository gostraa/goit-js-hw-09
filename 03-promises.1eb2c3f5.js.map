{"mappings":"oeACA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAWC,SAASC,cAAc,SAmBxC,SAASC,EAAcC,EAAOC,GAC5B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFR,EAAAe,OAAOC,QAAQ,uBAAqBV,QAAcC,OAGlDP,EAAAe,OAAOE,QAAQ,sBAAoBX,QAAYC,M,GAGhDA,EAAM,G,CA7BbL,EAASgB,iBAAiB,UAG1B,SAAsBC,GACpBA,EAAEC,iBACF,MAAMb,EAAQc,OAAOnB,EAASoB,SAASf,MAAMgB,OACvCC,EAAOH,OAAOnB,EAASoB,SAASE,KAAKD,OACrCE,EAASJ,OAAOnB,EAASoB,SAASG,OAAOF,OAE/C,IAAK,IAAIjB,EAAQ,EAAGA,GAASmB,EAAQnB,GAAS,EAC5CD,EAAcC,EAAOC,GAAOmB,OAAOC,QACnCpB,GAASiB,C","sources":["src/js/03-promises.js"],"sourcesContent":["\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formElem = document.querySelector(\".form\");\n  \nformElem.addEventListener(\"submit\", onFormSubmit);\n\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n  const delay = Number(formElem.elements.delay.value);\n  const step = Number(formElem.elements.step.value);\n  const amount = Number(formElem.elements.amount.value);\n  \n  for (let index = 1; index <= amount; index += 1) {\n    createPromise(index, delay).then().catch();\n    delay += step;\n   \n  }\n  \n}\n\nfunction createPromise(index, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        Notify.success(`✅ Fulfilled promise ${index} in ${delay}ms`)\n        resolve;\n      } else {\n        Notify.failure(`❌ Rejected promise ${index} in ${delay}ms`)\n        reject;\n      }\n    }, delay);\n \n  })\n}\n\n\n\n\n\n\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$formElem","document","querySelector","$47d4ff9957288465$var$createPromise","index","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","Notify","success","failure","addEventListener","e","preventDefault","Number","elements","value","step","amount","then","catch"],"version":3,"file":"03-promises.1eb2c3f5.js.map"}